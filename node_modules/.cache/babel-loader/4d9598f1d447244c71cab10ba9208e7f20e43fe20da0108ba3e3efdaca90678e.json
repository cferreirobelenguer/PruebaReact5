{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const useFetch = url => {\n  _s();\n  //Se coge la url por parámetro\n  const [state, setState] = useState({\n    data: null,\n    isLoading: true,\n    hasError: null\n  });\n  const [count, setCount] = useState(1);\n  const [id, setId] = useState(1);\n\n  //método que hace la llamada a la api cada vez que se pulsa siguiente o anterior en la paginación\n  const sendData = async () => {\n    setState({\n      ...state,\n      isLoading: true\n    });\n    const res = await fetch(url + count);\n    const data = await res.json();\n    setState({\n      data: data,\n      isLoading: false,\n      hasError: null\n    });\n  };\n\n  //método que hace la llamada a la api cuando se busca en el input por id\n  const sendId = async () => {\n    setState({\n      ...state,\n      isLoading: true\n    });\n    const res = await fetch(url + id);\n    const data = await res.json();\n    setState({\n      data: data,\n      isLoading: false,\n      hasError: null\n    });\n  };\n  useEffect(() => {\n    sendId();\n  }, [id]);\n  //Cada vez  que se actualiza count se produce la llamada a la api para mostrar los datos actualizados\n  useEffect(() => {\n    sendData();\n  }, [count]);\n\n  //métodos de paginación de la api breaking bad\n  const nextQuote = () => {\n    if (count >= 30) {\n      setCount(30);\n    } else {\n      setCount(count + 1);\n    }\n  };\n  const previousQuote = () => {\n    if (count <= 1) {\n      setCount(1);\n    } else {\n      setCount(count - 1);\n    }\n  };\n  const handlerChange = e => {\n    if (e.target.value <= 1) {\n      setId(1);\n      console.log(\"llegas al límite de menor de 1\");\n    } else if (e.target.value >= 30) {\n      setId(30);\n      console.log(\"llegas al límite de mayor de 30\");\n    } else {\n      setId(e.target.value);\n      console.log(id);\n    }\n  };\n  return {\n    data: state.data,\n    isLoading: state.isLoading,\n    hasError: state.isLoading,\n    previousQuote,\n    nextQuote,\n    handlerChange\n  };\n};\n_s(useFetch, \"dgG9CBjfK3+zTSMd2wiBTCq9j8w=\");","map":{"version":3,"names":["useEffect","useState","useFetch","url","state","setState","data","isLoading","hasError","count","setCount","id","setId","sendData","res","fetch","json","sendId","nextQuote","previousQuote","handlerChange","e","target","value","console","log"],"sources":["C:/Users/cferrebe/Documents/proyectos/PruebaReact5/src/components/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState} from \"react\"\r\n\r\nexport const useFetch=(url)=>{\r\n    //Se coge la url por parámetro\r\n    const [state,setState]=useState({\r\n        data:null,\r\n        isLoading:true,\r\n        hasError:null\r\n    })\r\n    const [count, setCount]=useState(1)\r\n    const [id, setId]=useState(1)\r\n\r\n    //método que hace la llamada a la api cada vez que se pulsa siguiente o anterior en la paginación\r\n    const sendData=async()=>{\r\n        setState({\r\n            ...state,\r\n            isLoading:true\r\n        })\r\n        \r\n        const res=await fetch(url+count)\r\n        const data=await res.json()\r\n        \r\n        setState({\r\n            data:data,\r\n            isLoading:false,\r\n            hasError:null\r\n        })\r\n    }\r\n\r\n    //método que hace la llamada a la api cuando se busca en el input por id\r\n    const sendId=async()=>{\r\n        setState({\r\n            ...state,\r\n            isLoading:true\r\n        })\r\n        \r\n        const res=await fetch(url+id)\r\n        const data=await res.json()\r\n        \r\n        setState({\r\n            data:data,\r\n            isLoading:false,\r\n            hasError:null\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        sendId()\r\n        \r\n    },[id])\r\n    //Cada vez  que se actualiza count se produce la llamada a la api para mostrar los datos actualizados\r\n    useEffect(()=>{\r\n        sendData()\r\n        \r\n    },[count])\r\n\r\n\r\n\r\n    \r\n\r\n    //métodos de paginación de la api breaking bad\r\n    const nextQuote=()=>{\r\n        \r\n        if(count>=30){\r\n            setCount(30)\r\n        }else{\r\n            setCount(count+1)\r\n        }\r\n    }\r\n    const previousQuote=()=>{\r\n        \r\n        if(count<=1){\r\n            setCount(1)\r\n        }else{\r\n            setCount(count-1)\r\n        }\r\n    }\r\n    const handlerChange=(e)=>{\r\n        if(e.target.value<=1){\r\n            setId(1)\r\n            console.log(\"llegas al límite de menor de 1\")\r\n        }else if(e.target.value>=30){\r\n            setId(30)\r\n            console.log(\"llegas al límite de mayor de 30\")\r\n        }else{\r\n            setId(e.target.value)\r\n            console.log(id)\r\n        }\r\n        \r\n    }\r\n\r\n    return {\r\n        data:state.data,\r\n        isLoading:state.isLoading,\r\n        hasError:state.isLoading,\r\n        previousQuote,\r\n        nextQuote,\r\n        handlerChange\r\n    }\r\n    \r\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAE1C,OAAO,MAAMC,QAAQ,GAAEC,GAAG,IAAG;EAAA;EACzB;EACA,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACJ,QAAQ,CAAC;IAC5BK,IAAI,EAAC,IAAI;IACTC,SAAS,EAAC,IAAI;IACdC,QAAQ,EAAC;EACb,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACT,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACU,EAAE,EAAEC,KAAK,CAAC,GAACX,QAAQ,CAAC,CAAC,CAAC;;EAE7B;EACA,MAAMY,QAAQ,GAAC,YAAS;IACpBR,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRG,SAAS,EAAC;IACd,CAAC,CAAC;IAEF,MAAMO,GAAG,GAAC,MAAMC,KAAK,CAACZ,GAAG,GAACM,KAAK,CAAC;IAChC,MAAMH,IAAI,GAAC,MAAMQ,GAAG,CAACE,IAAI,EAAE;IAE3BX,QAAQ,CAAC;MACLC,IAAI,EAACA,IAAI;MACTC,SAAS,EAAC,KAAK;MACfC,QAAQ,EAAC;IACb,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMS,MAAM,GAAC,YAAS;IAClBZ,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRG,SAAS,EAAC;IACd,CAAC,CAAC;IAEF,MAAMO,GAAG,GAAC,MAAMC,KAAK,CAACZ,GAAG,GAACQ,EAAE,CAAC;IAC7B,MAAML,IAAI,GAAC,MAAMQ,GAAG,CAACE,IAAI,EAAE;IAE3BX,QAAQ,CAAC;MACLC,IAAI,EAACA,IAAI;MACTC,SAAS,EAAC,KAAK;MACfC,QAAQ,EAAC;IACb,CAAC,CAAC;EACN,CAAC;EACDR,SAAS,CAAC,MAAI;IACViB,MAAM,EAAE;EAEZ,CAAC,EAAC,CAACN,EAAE,CAAC,CAAC;EACP;EACAX,SAAS,CAAC,MAAI;IACVa,QAAQ,EAAE;EAEd,CAAC,EAAC,CAACJ,KAAK,CAAC,CAAC;;EAMV;EACA,MAAMS,SAAS,GAAC,MAAI;IAEhB,IAAGT,KAAK,IAAE,EAAE,EAAC;MACTC,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAI;MACDA,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACrB;EACJ,CAAC;EACD,MAAMU,aAAa,GAAC,MAAI;IAEpB,IAAGV,KAAK,IAAE,CAAC,EAAC;MACRC,QAAQ,CAAC,CAAC,CAAC;IACf,CAAC,MAAI;MACDA,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACrB;EACJ,CAAC;EACD,MAAMW,aAAa,GAAEC,CAAC,IAAG;IACrB,IAAGA,CAAC,CAACC,MAAM,CAACC,KAAK,IAAE,CAAC,EAAC;MACjBX,KAAK,CAAC,CAAC,CAAC;MACRY,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IACjD,CAAC,MAAK,IAAGJ,CAAC,CAACC,MAAM,CAACC,KAAK,IAAE,EAAE,EAAC;MACxBX,KAAK,CAAC,EAAE,CAAC;MACTY,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAClD,CAAC,MAAI;MACDb,KAAK,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MACrBC,OAAO,CAACC,GAAG,CAACd,EAAE,CAAC;IACnB;EAEJ,CAAC;EAED,OAAO;IACHL,IAAI,EAACF,KAAK,CAACE,IAAI;IACfC,SAAS,EAACH,KAAK,CAACG,SAAS;IACzBC,QAAQ,EAACJ,KAAK,CAACG,SAAS;IACxBY,aAAa;IACbD,SAAS;IACTE;EACJ,CAAC;AAEL,CAAC;AAAA,GAjGYlB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}